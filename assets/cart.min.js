class CartRemoveButton extends HTMLElement{constructor(){super(),this.addEventListener("click",(e=>{e.preventDefault();(this.closest("cart-items")||this.closest("cart-drawer-items")).updateQuantity(this.dataset.index,0)}))}}customElements.define("cart-remove-button",CartRemoveButton);class CartItems extends HTMLElement{constructor(){super(),this.lineItemStatusElement=document.getElementById("shopping-cart-line-item-status")||document.getElementById("CartDrawer-LineItemStatus"),this.currentItemCount=Array.from(this.querySelectorAll('[name="updates[]"]')).reduce(((e,t)=>e+parseInt(t.value)),0),this.debouncedOnChange=debounce((e=>{this.onChange(e)}),300),this.addEventListener("change",this.debouncedOnChange.bind(this))}onChange(e){this.updateQuantity(e.target.dataset.index,e.target.value,document.activeElement.getAttribute("name"))}getSectionsToRender(){return[{id:"main-cart-items",section:document.getElementById("main-cart-items").dataset.id,selector:".js-contents"},{id:"cart-icon-bubble",section:"cart-icon-bubble",selector:".shopify-section"},{id:"cart-live-region-text",section:"cart-live-region-text",selector:".shopify-section"},{id:"main-cart-footer",section:document.getElementById("main-cart-footer").dataset.id,selector:".js-contents"}]}updateQuantity(e,t,n){this.enableLoading(e);const r=JSON.stringify({line:e,quantity:t,sections:this.getSectionsToRender().map((e=>e.section)),sections_url:window.location.pathname});fetch(`${routes.cart_change_url}`,{...fetchConfig(),body:r}).then((e=>e.text())).then((t=>{const r=JSON.parse(t);this.classList.toggle("is-empty",0===r.item_count);const i=document.querySelector("cart-drawer"),a=document.getElementById("main-cart-footer");a&&a.classList.toggle("is-empty",0===r.item_count),i&&i.classList.toggle("is-empty",0===r.item_count),this.getSectionsToRender().forEach((e=>{(document.getElementById(e.id).querySelector(e.selector)||document.getElementById(e.id)).innerHTML=this.getSectionInnerHTML(r.sections[e.section],e.selector)})),this.updateLiveRegions(e,r.item_count);const o=document.getElementById(`CartItem-${e}`)||document.getElementById(`CartDrawer-Item-${e}`);o&&o.querySelector(`[name="${n}"]`)?i?trapFocus(i,o.querySelector(`[name="${n}"]`)):o.querySelector(`[name="${n}"]`).focus():0===r.item_count&&i?trapFocus(i.querySelector(".drawer__inner-empty"),i.querySelector("a")):document.querySelector(".cart-item")&&i&&trapFocus(i,document.querySelector(".cart-item__name")),this.disableLoading()})).catch((()=>{this.querySelectorAll(".loading-overlay").forEach((e=>e.classList.add("hidden")));(document.getElementById("cart-errors")||document.getElementById("CartDrawer-CartErrors")).textContent=window.cartStrings.error,this.disableLoading()}))}updateLiveRegions(e,t){if(this.currentItemCount===t){const t=document.getElementById(`Line-item-error-${e}`)||document.getElementById(`CartDrawer-LineItemError-${e}`),n=document.getElementById(`Quantity-${e}`)||document.getElementById(`Drawer-quantity-${e}`);t.querySelector(".cart-item__error-text").innerHTML=window.cartStrings.quantityError.replace("[quantity]",n.value)}this.currentItemCount=t,this.lineItemStatusElement.setAttribute("aria-hidden",!0);const n=document.getElementById("cart-live-region-text")||document.getElementById("CartDrawer-LiveRegionText");n.setAttribute("aria-hidden",!1),setTimeout((()=>{n.setAttribute("aria-hidden",!0)}),1e3)}getSectionInnerHTML(e,t){return(new DOMParser).parseFromString(e,"text/html").querySelector(t).innerHTML}enableLoading(e){(document.getElementById("main-cart-items")||document.getElementById("CartDrawer-CartItems")).classList.add("cart__items--disabled");[...this.querySelectorAll(`#CartItem-${e} .loading-overlay`),...this.querySelectorAll(`#CartDrawer-Item-${e} .loading-overlay`)].forEach((e=>e.classList.remove("hidden"))),document.activeElement.blur(),this.lineItemStatusElement.setAttribute("aria-hidden",!1)}disableLoading(){(document.getElementById("main-cart-items")||document.getElementById("CartDrawer-CartItems")).classList.remove("cart__items--disabled")}}customElements.define("cart-items",CartItems),customElements.get("cart-note")||customElements.define("cart-note",class extends HTMLElement{constructor(){super(),this.addEventListener("change",debounce((e=>{const t=JSON.stringify({note:e.target.value});fetch(`${routes.cart_update_url}`,{...fetchConfig(),body:t})}),300))}});